// test_cvx.glm

#set suppress_repeat_messages=FALSE
#set randomseed=1

clock
{
    timezone America/Seattle;
    starttime "2020-01-01 00:00:00 PST";
    stoptime "2020-01-02 00:00:00 PST";
}

module optimize
{
    cvx_failure_handling WARN;
    cvx_problemdump "test_cvx.txt";
}

class test
{
    randomvar A;
    randomvar b;
    double x;
    double y;
    double mu;
    double lambda;
}

module pypower;
module tape
{
    csv_header_type NAME;
}
object test:..3
{
    parent problem-x;
    name `test_{id}`;
    groupid "test_group";
    latitude 37.5;
    longitude -122.5;
    A "type:normal(0,1);refresh:1h";
    b "type:normal(0,1);refresh:1h";
    x 0.0;
    y 0.0;
    object recorder
    {
        file `test_cvx_{id}.csv`;
        property "A,b,x,y";
        interval -1;
    };
}

object cvx
{
    name "least-squares";
    event INIT;
    presolve """
        m=20
        n=15
        np.random.seed(1)
        A=np.random.rand(m,n)
        b=np.random.rand(m)
        x=Variable(n)
        """;
    objective "Minimize(sum_squares(A@x-b))";
    postsolve "print('Residual 2-norm:',round(cvx.norm(A@x-b,p=2).value,6),file=__dump__,flush=True)";
}

object cvx
{
    name "linear-program";
    event FINALIZE;
    presolve """
        m=15
        n=10
        np.random.seed(1)
        s0 = np.random.randn(m)
        lamb0 = np.maximum(-s0, 0)
        s0 = np.maximum(s0, 0)
        x0 = np.random.randn(n)
        A = np.random.randn(m, n)
        b = A @ x0 + s0
        c = -A.T @ lamb0
        x = Variable(n)
        """;
    objective "Minimize(c.T@x)";
    constraints "A@x<=b";
    postsolve "print('Dual value:',__cvx__['linear-program']['constraints'][0].dual_value.round(6),file=__dump__,flush=True)";
}

object cvx 
{
    name "problem-x";
    event INIT;
    variables "x=test:x";
    data "A=test:A";
    objective "Minimize(sum_squares(A@x))";
    constraints "x >= 1";
}

object cvx 
{
    parent "problem-x";
    name "problem-y-dpp";
    event SYNC;
    data "~A=test:A;~b=test:b"; // parameter syntax
    variables "y=test:y";
    objective "Minimize(sum_squares(A@y-b))";
    constraints "y >= 1";
}

#set savefile=${modelname/.glm/.json}

// This test does not work on linux platforms for some unknown reason
#ifexist "../test_cvx.txt"
#ifdef APPLE
#on_exit 0 diff -w -I '^(param_prob: |P: |Problem solved: |Data: |Result: |  )' ../test_cvx.txt test_cvx.txt > gridlabd.diff
#endif
#endif

